import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;

class Main {
    public static void main(String[] args) {
        int chance = 0;
        Scanner sc = new Scanner(System.in);
        ArrayList<Integer> intlist1 = new ArrayList<>();
        ArrayList<Integer> intlist2 = new ArrayList<>();
        chance = sc.nextInt();
        fibonacci ffff = new fibonacci();
        while(true){
            if(chance==0){
                for(int j = 0;j<intlist1.size();j++){
                System.out.println(intlist1.get(j)+" "+intlist2.get(j));
                }
            break;
            }else{
                int n = sc.nextInt();
                ffff.fibonacci(n);
                intlist1.add(ffff.zeronum);
                intlist2.add(ffff.onenum);
                ffff.zeronum = 0;
                ffff.onenum = 0;
                chance = chance - 1;
            }
        }
        
    }
}



class fibonacci{
    int n;
    int onenum = 0;
    int zeronum = 0;
    int fibonacci(int n){
        if(n==1){
            onenum = onenum + 1;
            return 1;
        }else if(n==0){
            zeronum = zeronum + 1;
            return 0;
        }else{
            return fibonacci(n-1) + fibonacci(n-2);
        }
    }
}

















import java.util.Scanner;

public class FibonacciCount {
    
    // 0과 1의 개수를 저장할 배열 (0과 1이 출력되는 횟수)
    public static int[][] dp = new int[41][2];
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        // 피보나치 수열의 각 값에 대해 0과 1이 몇 번 출력되는지 미리 계산
        dp[0][0] = 1;  // F(0)에서 0은 1번 출력
        dp[0][1] = 0;  // F(0)에서 1은 0번 출력
        dp[1][0] = 0;  // F(1)에서 0은 0번 출력
        dp[1][1] = 1;  // F(1)에서 1은 1번 출력
        
        // 피보나치 수열 계산하면서 0과 1의 출력 횟수 기록
        for (int i = 2; i <= 40; i++) {
            dp[i][0] = dp[i - 1][0] + dp[i - 2][0];  // F(i)에서 0의 개수
            dp[i][1] = dp[i - 1][1] + dp[i - 2][1];  // F(i)에서 1의 개수
        }

        // 테스트 케이스의 개수 입력
        int T = sc.nextInt();
        
        // 각 테스트 케이스에 대해 처리
        for (int i = 0; i < T; i++) {
            int N = sc.nextInt();
            // F(N)의 0과 1의 개수를 출력
            System.out.println(dp[N][0] + " " + dp[N][1]);
        }
        
        sc.close();
    }
}

