import java.util.Scanner;
import java.util.ArrayList;
import java.util.Arrays;
import java.lang.Math;
import java.lang.StringBuilder;

class Main {
    static ArrayList<Integer> numlist = new ArrayList<>(Arrays.asList(0,1,2,3,4,5,6,7,8,9));
    static StringBuilder sb = new StringBuilder();
    static int finalint;
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String N = sc.nextLine();
        int broken = sc.nextInt();
        sc.nextLine();
        if(broken == 0){
            System.out.println(N.length());
        }else{
        String str = sc.nextLine();
        String word[] = str.split(" ");
        for(int i = 0;i<broken;i++){
            numlist.remove(Integer.valueOf(Integer.parseInt(word[i])));
        }
            if(Integer.parseInt(N) == 100){
                System.out.println("0");
            }else{
        check(N);
        
        int compareint = Integer.parseInt(N) - 100;
        
        int finnal = Math.min(finalint,compareint);
        
        System.out.println(finnal);
            }
        }
        
    }
    
    
    private static void check(String start){
        int firstnum = 0;
        ArrayList<Integer> faircompare = new ArrayList<>();
        boolean factcheck = false;
        for(int j = 0;j<start.length();j++){
            int compare = 11;
            char c = start.charAt(j);
            int asdf = Character.getNumericValue(c);
            factcheck = numlist.contains(asdf);
            if(factcheck){
                sb.append(String.valueOf(c));
            }else{
                for(int q = 0;q<numlist.length;q++){
                    int compare1 = Math.abs(asdf - numlist.get(q));
                    if(compare1 < compare){
                        faircompare.clear();
                        faircompare.add(numlist.get(q));
                        compare = compare1;
                    }else if(compare1 = compare){
                        faircompare.add(numlist.get(q));
                    }
                }
            int sss = start.length() - j - 1;
        if(faircompare.size() == 1){
            firstnum = faircompare.get(0)*Math.pow(10,sss);
        }else{
            int num1 = faircompare.get(0)*Math.pow(10,sss);
            int num2 = faircompare.get(1)*Math.pow(10,sss);
            if(Integer.parseInt(start) - num1 > Integer.parseInt(start) - num2){
                
            }
            
            
        }        
                
                
                
            }
            
            
        }
    }
}



--------------------------------------------------------------------------------------------------------------



import java.lang.Math;
import java.util.ArrayList;

class Main {
    static int asdf;
    static char c;
    static int[][] num;
    static ArrayList<Integer> numlist = new ArrayList<>(Arrays.asList(0,1,2,3,4,5,6,7,8,9));
    public static void main(String[] args) {
        System.out.println("Try programiz.pro");
    }
    
    
    
    
    
    private static void firstnumber(String num){
            ArrayList<Integer> faircompare = new ArrayList<>();
            int compare = 11;
            c = start.charAt(0);
            int k = 0;
            asdf = Character.getNumericValue(c);
            if(numlist.contains(asdf)){
                faircompare.add(asdf);
                for(int q = 0;q<numlist.length;q++){
                    if(asdf-numlist.get(q)==-1 || asdf-numlist.get(q) == 1){
                        faircompare.add(q);
                    }
                    
                }
                for(int j : faircompare){
                    num[k][0] = j*Math.pow(10,num.length()-1);
                    k++;
                }
            }else{
                for(int u = 0;u<numlist.length;u++){
                    int compare1 = Math.abs(asdf - numlist.get(u));
                    if(compare1 < compare){
                        faircompare.clear();
                        faircompare.add(numlist.get(u));
                        compare = compare1;
                    }else if(compare1 = compare){
                        faircompare.add(numlist.get(u));
                    }
                }
                
                for(int qwe : faircompare){
                    num[k][0] = qwe*Math.pow(10,num.length()-1);
                    k++; 
                
            }
    }
    
    
    private static void lastcheck(String num){
        if(num[])
    }
    
    
    
}
