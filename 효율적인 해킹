import java.util.Scanner;
import java.util

class Main {
    static int N;
    static int chance;
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String str = sc.nextLine();
        String[] word = str.split(" ");
        int N = Integer.parseInt(word[0]);
        int M = Integer.parseInt(word[1]);
        int[][] graph = new int[N+1][N+1];
        boolean visit[N] = false;
        for(int i = 0;i<M;i++){
            String strr = sc.nextLine();
            String word2[] = strr.split(" ");
            int node1 = Integer.parseInt(word2[0]);
            int node2 = Integer.parseInt(word2[1]);
            graph[node1][node2] = 1;
            graph[node2][node1] = 1;
        }
        
        int[] finallist = new int[N];
        for(int j = 1;j<N+1;j++){
            dfs(j);
            Haspmap
            for(int q = 1;q<N+1;q++){
                visit[q] = false;
            }
        }
        
        
            
    }
    
    static void dfs(int n){
        for(int u = 1;u<N+1;u++){
            if(visit[u] == false && graph[n][u] == 1){
                chance = chance + 1;
                visit[u] == true;
                dfs(u);
            }
        }
        
    }
}
