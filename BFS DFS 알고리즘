import java.util.Queue;
import java.util.LinkedList;
import java.util.Scanner;


class Main{
    
        static int node, start, line;
        static Queue<Integer> q = new LinkedList<>();
        static int graph[][];
        static boolean[] visit;
        
        
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        String str = sc.nextLine();
        String word[] = str.split(" ");
        node = Integer.parseInt(word[0]);
        line = Integer.parseInt(word[1]);
        start = Integer.parseInt(word[2]);
        
        graph = new int[node+1][node+1];
        visit = new boolean[node+1];
        
        for(int t = 0;t<line; t++){
            String lineline = sc.nextLine();
            String worrd[] = lineline.split(" ");
            int abc = Integer.parseInt(worrd[0]);
            int abcd = Integer.parseInt(worrd[1]);
            graph[abc][abcd] = 1;
            graph[abcd][abc] = 1;
        }
        
        dfs(start);
        System.out.println("");
        
        visit = new boolean[node+1];
        bfs(start);
        
        
        
    }
    

    static void dfs(int v){
        visit[v] = true;
        System.out.printf(v+" ");
        
        for(int i = 1;i<node+1;i++){
            if(graph[v][i]==1 && visit[i] == false){
                dfs(i);
            }
        }
    }



    static void bfs(int u){
        visit[u] = true;
        q.add(u);
        
        while(!q.isEmpty()){
            
            start = q.poll();
            System.out.printf(start+" ");
            
            for(int j = 1;j<node+1;j++){
                if(graph[start][j]==1 && visit[j]==false){
                    q.add(j);
                    visit[j] = true;
                }
            }
        }
        
        
    }

}
